{"version":3,"sources":["components/Modals/InstallApp/style.module.scss","assets/sounds/deal_cards.wav","components/Modals/Win/style.module.scss","assets/black_undo.svg","assets/icon_gift.svg","assets/icon_play.svg","assets/setting.svg","assets/reload.svg","assets/sounds/card_set.wav","components/Modals/InstallApp/assets/logo.svg","components/Modals/InstallApp/assets/fi-rr-cross-small.svg","components/Modals/Win/assets/icon_cup.svg","assets/sounds/win.wav","assets/sounds/card_return.wav","assets sync /^/.//.*/.svg$","assets/1B.svg","assets/1J.svg","assets/C.svg","assets/D.svg","assets/H.svg","assets/S.svg","assets/deck.svg","assets/right-arrow.svg","assets/settings_icon.svg","assets/star.svg","assets/trophy.svg","assets/undo.svg","actions/gameActions.tsx","interfaces/game.ts","actions/cardsActions.tsx","utils.ts","dragTypes.ts","reducers/gameReducer.ts","actions/scoreActions.tsx","reducers/cardsReducer.ts","actions/historyActions.tsx","reducers/scoreReducer.ts","components/Card.tsx","components/TableuPile.tsx","components/Talon.tsx","components/Stock.tsx","components/Foundation.tsx","components/CardDragPreview.tsx","components/Timer.tsx","components/GameButton.tsx","components/Modals/Loader.js","components/Modals/PIN-modal.js","components/Modals/GameOverModal.js","components/Modals/ExitGameModal.js","components/Modals/SettingsModal.js","components/Modals/StartNewGame.js","components/Modals/InstallApp/index.jsx","components/Modals/Win/index.jsx","components/Modals/Congratulations.js","views/Game.tsx","App.tsx","serviceWorker.ts","store.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","GameActionTypes","CardColor","CardState","changeDeckDrawType","payload","type","ChangeDeckDrawType","turnCard","TurnCard","drawCard","DrawCard","startNewGame","NewGame","switchSound","SwitchSound","cardIsDragged","CardIsDragged","CardsActionsTypes","createTimeString","gameTime","seconds","Math","floor","slice","minutes","hours","toString","useMedia","query","useState","window","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","getOffSet","index","offset","suits","createNewGame","startDeck","a","j","x","i","length","random","shuffle","deck","forEach","suit","push","rank","color","Red","Black","hidden","state","TableuPile","isDragging","createDeck","tableuPiles","tempPiles","splice","card","Deck","decks","dealCardsSound","Audio","deal_cards","cardSetSound","card_set","initialState","foundations","waste","score","drawCounts","deckDrawType","deckCount","sound","undoStepsCount","selectWaste","game","present","selectDeck","selectFoundations","selectTableuPiles","selectScore","selectDrawCounts","selectDeckCount","getSound","getUndoStepsCount","selectNextFoundationCards","foundation","selectDeckType","ScoreActionTypes","setCards","GetCards","cards","getCards","HistoryActionTypes","startTime","isGameOver","scores","gameWonTime","selectIsGameOver","selectGameWonTime","selectStartTime","Card","memo","isLastCard","isActive","gamePlace","indexInWaste","dispatch","useDispatch","nextFoundationCards","useSelector","useDrag","item","end","monitor","dropResult","getDropResult","nextState","movedCard","TableuPileAddCards","Foundation","FoundationAddCards","addCardsToFoundation","preview","openedCardsAmount","filter","lastAfterDragCard","collect","getItem","canDrag","drag","checkDoubleClick","find","nextCard","doubleClickedCard","CardDoubleClicked","getEmptyImage","captureDraggingState","fetchedCards","deckType","isBackside","className","style","top","opacity","alt","src","onDragStart","preventDefault","stopPropagation","ref","right","display","undefined","onClick","onDoubleClick","useDrop","accept","canDrop","getDroppable","drop","isOver","xsh","xs","sm","md","getOffsetByMedia","useCallback","key","Talon","alignSelf","flexDirection","Stock","classes","require","foundationSuit","tableuPile","CardDragPreview","draggedCard","setDraggedCard","memoizedPreview","useMemo","indexOfCard","findIndex","createPreviewCards","generator","zIndex","Timer","setGameTime","interval","setInterval","Date","now","clearInterval","every","GameIsOver","GameButton","icon","handleClick","text","styled","Loader","requestState","Modal","isOpen","pending","PINModal","setRequestState","setCong","modal","setModal","gameType","pathname","location","error","setError","pin","setPin","inputProps","inputStyle","height","width","border","outlineColor","borderRadius","fontSize","fontWeight","textAlign","boxShadow","onCLickPlay","fetch","then","res","ok","json","rewrittenFetchedCards","fulfilled","play","playSound","catch","onSubmit","ModalBody","name","fields","value","onChange","inputMode","ModalFooter","href","disabled","GameOverModal","handleStartNewGame","handleUndoMove","toggle","s","black_undo","play_icon","ExitGameModal","CreateRadio","label","setState","SettingsModal","animation","setAnimation","agreement","setAgreement","setSound","stockStatus","setStockStatus","onClickRadio","StartNewGame","block","setBlock","setTimeout","InstallApp","open","setOpen","mobile","navigator","appVersion","indexOf","install","installBlock","caption","logo","installTxt","icons","installButtons","close","winSound","win","Win","img","contentText","reduce","b","Congratulations","congratulations","setInstall","minHeight","gift","borderTop","cardReturnSound","card_return","Game","gameOverModal","setGameOverModal","openInstall","setOpenInstall","congratulationsM","setCongratulationsM","setGameType","exitModalOpen","setExitModalOpen","startNewGameModal","setStartNewGameModal","settingsModalOpen","setSettingsModalOpen","drawCount","pinCodeModal","setPinCodeModal","setCongratulations","JSON","parse","localStorage","GetScores","ActionCreators","jump","ClearHistory","is_demo","gameScores","setting_icon","pile","CustomHTML5toTouch","backends","backend","HTML5Backend","transition","MouseTransition","TouchBackend","options","enableMouseEvents","TouchTransition","skipDispatchOnTransition","App","DndProvider","MultiBackend","Boolean","hostname","match","rootReducer","combineReducers","undoable","action","produce","draft","column","cardsToAdd","cardsLeft","suitIndex","undoType","UndoMove","ignoreInitialState","clearHistoryType","excludeAction","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e301a716.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"install\":\"style_install__14ZlE\",\"installBlock\":\"style_installBlock__W8Ks3\",\"caption\":\"style_caption__11KJl\",\"logo\":\"style_logo__1eSQK\",\"installTxt\":\"style_installTxt__1BA3g\",\"icons\":\"style_icons__31v39\",\"installButtons\":\"style_installButtons__3XBs0\",\"close\":\"style_close__3CckB\"};","module.exports = __webpack_public_path__ + \"static/media/deal_cards.d970ed48.wav\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"win\":\"style_win__1B_ut\",\"img\":\"style_img__270Yi\",\"contentText\":\"style_contentText__2lB9t\"};","module.exports = __webpack_public_path__ + \"static/media/black_undo.3648abc1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_gift.639076fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_play.cd50e11a.svg\";","module.exports = __webpack_public_path__ + \"static/media/setting.47026d86.svg\";","module.exports = __webpack_public_path__ + \"static/media/reload.465f344e.svg\";","module.exports = __webpack_public_path__ + \"static/media/card_set.9e324e46.wav\";","module.exports = __webpack_public_path__ + \"static/media/logo.15b816bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/fi-rr-cross-small.ba00f6a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_cup.6709b743.svg\";","module.exports = __webpack_public_path__ + \"static/media/win.a6562238.wav\";","module.exports = __webpack_public_path__ + \"static/media/card_return.24107c47.wav\";","var map = {\n\t\"./1B.svg\": 75,\n\t\"./1J.svg\": 76,\n\t\"./C.svg\": 77,\n\t\"./D.svg\": 78,\n\t\"./H.svg\": 79,\n\t\"./S.svg\": 80,\n\t\"./black_undo.svg\": 34,\n\t\"./deck.svg\": 81,\n\t\"./icon_gift.svg\": 35,\n\t\"./icon_play.svg\": 36,\n\t\"./reload.svg\": 44,\n\t\"./right-arrow.svg\": 82,\n\t\"./setting.svg\": 37,\n\t\"./settings_icon.svg\": 83,\n\t\"./star.svg\": 84,\n\t\"./trophy.svg\": 85,\n\t\"./undo.svg\": 86\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;","module.exports = __webpack_public_path__ + \"static/media/1B.8ed7ee37.svg\";","module.exports = __webpack_public_path__ + \"static/media/1J.cf084cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/C.c744b1ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/D.1c8fafa5.svg\";","module.exports = __webpack_public_path__ + \"static/media/H.95bb77b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/S.a27b6da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/deck.5f3a43f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.0c074e5e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_icon.47026d86.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.9d6ee735.svg\";","module.exports = __webpack_public_path__ + \"static/media/trophy.45fe0c39.svg\";","module.exports = __webpack_public_path__ + \"static/media/undo.d6ffc5fd.svg\";","import {CardState, PlayingCard} from \"interfaces/game\";\n\nexport enum GameActionTypes {\n  FoundationAddCards = \"game/AddToFoundationCards\",\n  TableuPileAddCards = \"game/AddToTableuPileCards\",\n  TurnCard = \"game/TurnCard\",\n  DrawCard = \"game/DrawCard\",\n  NewGame = \"game/NewGame\",\n  CardIsDragged = \"game/CardIsDragged\",\n  CardDoubleClicked = \"game/HandleDoubleClick\",\n  UndoMove = \"game/UndoMove\",\n  ChangeDeckDrawType = 'game/ChangeDeckDrawType',\n  SwitchSound = 'game/switchSound'\n}\n\ntype CardsPayload = {\n  movedCard: PlayingCard;\n  index: number;\n  nextState: CardState;\n};\n\ntype CardDoubleClickedPayload = {\n  doubleClickedCard: PlayingCard;\n};\n\ntype CardDragPayload = {\n  movedCard: PlayingCard;\n  isDragging: boolean;\n  preview: any;\n};\n\ntype TurnCardPayload = {\n  index: number;\n  id: string;\n};\n\nexport type NewGamePayload = {\n  tableuPiles: PlayingCard[][];\n  deck: PlayingCard[];\n};\n\ntype AddCardsToFoundation = {\n  readonly type: GameActionTypes.FoundationAddCards;\n  readonly payload: CardsPayload;\n};\n\ntype AddCardsToTableuPile = {\n  readonly type: GameActionTypes.TableuPileAddCards;\n  readonly payload: CardsPayload;\n};\n\nexport type TurnCard = {\n  readonly type: GameActionTypes.TurnCard;\n  readonly payload: TurnCardPayload;\n};\n\nexport type DrawCard = {\n  readonly type: GameActionTypes.DrawCard;\n};\n\nexport type SwitchSound = {\n  readonly type: GameActionTypes.SwitchSound;\n  readonly payload: boolean;\n};\n\nexport type UndoMove = {\n  readonly type: GameActionTypes.UndoMove;\n};\n\nexport type ChangeDeckDrawType = {\n  readonly type: GameActionTypes.ChangeDeckDrawType,\n  readonly payload: 1 | 3;\n}\n\nexport type StartNewGame = {\n  readonly type: GameActionTypes.NewGame;\n  readonly payload: NewGamePayload;\n};\n\ntype CardIsDragged = {\n  readonly type: GameActionTypes.CardIsDragged;\n  readonly payload: CardDragPayload;\n};\n\nexport type CardDoubleClicked = {\n  readonly type: GameActionTypes.CardDoubleClicked;\n  readonly payload: CardDoubleClickedPayload;\n};\n\nexport const changeDeckDrawType = (payload: 1 | 3): ChangeDeckDrawType => ({\n  type: GameActionTypes.ChangeDeckDrawType,\n  payload\n})\n\nexport const addCardsToFoundation = (payload: CardsPayload): AddCardsToFoundation => ({\n  type: GameActionTypes.FoundationAddCards,\n  payload\n});\n\nexport const addCardsToTableuPile = (payload: CardsPayload): AddCardsToTableuPile => ({\n  type: GameActionTypes.TableuPileAddCards,\n  payload\n});\n\nexport const turnCard = (payload: TurnCardPayload): TurnCard => ({\n  type: GameActionTypes.TurnCard,\n  payload\n});\n\nexport const drawCard = (): DrawCard => ({type: GameActionTypes.DrawCard});\n\nexport const startNewGame = (payload: NewGamePayload): StartNewGame => ({\n  type: GameActionTypes.NewGame,\n  payload\n});\n\nexport const switchSound = (payload: boolean): SwitchSound => ({type: GameActionTypes.SwitchSound, payload});\n\nexport const cardIsDragged = (payload: CardDragPayload): CardIsDragged => ({\n  type: GameActionTypes.CardIsDragged,\n  payload\n});\n\nexport const handleDoubleClick = (payload: CardDoubleClickedPayload): CardDoubleClicked => ({\n  type: GameActionTypes.CardDoubleClicked,\n  payload\n});\n\nexport const undoMove = (): UndoMove => ({type: GameActionTypes.UndoMove});\n\nexport type GameActions =\n  | AddCardsToFoundation\n  | AddCardsToTableuPile\n  | TurnCard\n  | DrawCard\n  | StartNewGame\n  | CardIsDragged\n  | CardDoubleClicked\n  | UndoMove\n  | ChangeDeckDrawType\n  | SwitchSound;\n","import CSS from \"csstype\";\n\nexport enum CardColor {\n  Red,\n  Black\n}\n\nexport interface PlayingCard {\n  id: string;\n  rank: number;\n  suit: string;\n  color: CardColor;\n  hidden: boolean;\n  index: number;\n  type: string;\n  state: CardState;\n  isDragging: boolean;\n}\n\nexport enum CardState {\n  TableuPile,\n  Deck,\n  Foundation\n}\n\nexport interface PreviewObject {\n  itemType: string;\n  item: {\n    type: string;\n    card: PlayingCard;\n  };\n  style: CSS.Properties;\n}\n\nexport interface Pile {\n  cards: PlayingCard[];\n  index: number;\n}\n\nexport interface CardProps {\n  offset?: number;\n  card: PlayingCard;\n  cards: PlayingCard[];\n  isLastCard: boolean;\n  gamePlace: string;\n  isActive: boolean;\n  indexInWaste: number;\n}\n\nexport interface DraggedItem {\n  type?: string;\n  card?: PlayingCard;\n}\n","export enum CardsActionsTypes {\n  GetCards = \"cards/GetCards\"\n}\n\nexport type Cards = {\n  [key: string]: string\n}\n\nexport type GetCards = {\n  readonly type: CardsActionsTypes.GetCards;\n  readonly payload: Cards\n}\n\nexport const setCards = (payload: Cards): CardsActions => ({\n  type: CardsActionsTypes.GetCards,\n  payload\n})\n\nexport type CardsActions =\n  | GetCards\n","import {CardColor, CardState, PlayingCard} from \"interfaces/game\";\nimport {NewGamePayload} from \"actions/gameActions\";\nimport {typeOfCard} from \"dragTypes\";\nimport {useEffect, useState} from \"react\";\n\nexport const createTimeString = (gameTime: number): string => {\n  const seconds = (\"0\" + (Math.floor(gameTime / 1000) % 60)).slice(-2);\n  const minutes = (\"0\" + (Math.floor(gameTime / 60000) % 60)).slice(-2);\n  const hours = Math.floor(gameTime / 3600000)\n    .toString()\n    .slice(-2);\n  return `${+hours ? hours + \":\" : ''}${minutes}:${seconds}`;\n};\n\nexport const useMedia = (query: string): boolean => {\n  const [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n\n    const listener = (): void => setMatches(media.matches);\n    media.addListener(listener);\n\n    return (): void => media.removeListener(listener);\n  }, [query, matches]);\n\n  return matches;\n};\n\nexport const getOffSet = (index: number, offset: number): number => {\n  return index > 0 ? index * offset : 0;\n};\n\nexport const shuffle = <T>(a: T[]): T[] => {\n  let j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n};\n\nexport const suits: string[] = [\"H\", \"D\", \"C\", \"S\"];\n\nexport const createDeck = (): PlayingCard[] => {\n  const deck: PlayingCard[] = [];\n  for (let i = 1; i < 14; i++) {\n    suits.forEach(suit => {\n      deck.push({\n        rank: i,\n        suit,\n        color: suit === \"D\" || suit === \"H\" ? CardColor.Red : CardColor.Black,\n        hidden: false,\n        id: i.toString() + suit,\n        type: typeOfCard,\n        index: 0,\n        state: CardState.TableuPile,\n        isDragging: false\n      });\n    });\n  }\n  return deck;\n};\n\nexport const createNewGame = (): NewGamePayload => {\n  const startDeck = shuffle(createDeck());\n  const tableuPiles: PlayingCard[][] = [];\n  for (let i = 1; i < 8; i++) {\n    const tempPiles = startDeck.splice(0, i);\n    tempPiles.map((card: PlayingCard, index: number) => {\n      card.index = i - 1;\n      if (index < tempPiles.length - 1) {\n        card.hidden = true;\n        return card;\n      }\n      card.hidden = false;\n      return card;\n    });\n    tableuPiles.push(tempPiles);\n  }\n  const deck = startDeck.map(card => ({...card, state: CardState.Deck}));\n  return {tableuPiles, deck};\n};\n\nexport const decks = {\n  \"0_1\": \"1S\",\n  \"0_2\": \"1D\",\n  \"0_3\": \"1C\",\n  \"0_4\": \"1H\",\n  \"2_1\": \"2S\",\n  \"2_2\": \"2D\",\n  \"2_3\": \"2C\",\n  \"2_4\": \"2H\",\n  \"3_1\": \"3S\",\n  \"3_2\": \"3D\",\n  \"3_3\": \"3C\",\n  \"3_4\": \"3H\",\n  \"4_1\": \"4S\",\n  \"4_2\": \"4D\",\n  \"4_3\": \"4C\",\n  \"4_4\": \"4H\",\n  \"5_1\": \"5S\",\n  \"5_2\": \"5D\",\n  \"5_3\": \"5C\",\n  \"5_4\": \"5H\",\n  \"6_1\": \"6S\",\n  \"6_2\": \"6D\",\n  \"6_3\": \"6C\",\n  \"6_4\": \"6H\",\n  \"7_1\": \"7S\",\n  \"7_2\": \"7D\",\n  \"7_3\": \"7C\",\n  \"7_4\": \"7H\",\n  \"8_1\": \"8S\",\n  \"8_2\": \"8D\",\n  \"8_3\": \"8C\",\n  \"8_4\": \"8H\",\n  \"9_1\": \"9S\",\n  \"9_2\": \"9D\",\n  \"9_3\": \"9C\",\n  \"9_4\": \"9H\",\n  \"10_1\": \"10S\",\n  \"10_2\": \"10D\",\n  \"10_3\": \"10C\",\n  \"10_4\": \"10H\",\n  \"11_1\": \"11S\",\n  \"11_2\": \"11D\",\n  \"11_3\": \"11C\",\n  \"11_4\": \"11H\",\n  \"12_1\": \"12S\",\n  \"12_2\": \"12D\",\n  \"12_3\": \"12C\",\n  \"12_4\": \"12H\",\n  \"13_1\": \"13S\",\n  \"13_2\": \"13D\",\n  \"13_3\": \"13C\",\n  \"13_4\": \"13H\",\n  'shirt': \"1B\"\n}\n","export const typeOfCard = \"CARD\";\n","import produce from \"immer\";\nimport {GameActions, GameActionTypes} from \"actions/gameActions\";\nimport {RootState} from \"store\";\nimport {CardState, PlayingCard} from \"interfaces/game\";\nimport {suits} from \"utils\";\n\nimport deal_cards from \"../assets/sounds/deal_cards.wav\";\nimport card_set from \"../assets/sounds/card_set.wav\";\n\nconst dealCardsSound = new Audio(deal_cards);\nconst cardSetSound = new Audio(card_set);\n\ninterface GameState {\n  foundations: PlayingCard[][];\n  tableuPiles: PlayingCard[][];\n  deck: PlayingCard[];\n  waste: PlayingCard[];\n  score: number[];\n  drawCounts: number;\n  deckDrawType: 1 | 3;\n  deckCount: number;\n  sound: boolean;\n  undoStepsCount: number;\n}\n\nexport const initialState: GameState = {\n  foundations: [[], [], [], []],\n  tableuPiles: [],\n  deck: [],\n  waste: [],\n  score: [],\n  drawCounts: 0,\n  deckDrawType: 1,\n  deckCount: 24,\n  sound: true,\n  undoStepsCount: -1\n};\n\nexport const gameReducer = (state = initialState, action: GameActions): GameState => {\n  switch (action.type) {\n    //Add dragged card(s) to foundation and remove from source\n    case GameActionTypes.FoundationAddCards:\n      return produce(state, draft => {\n        draft.sound && cardSetSound.play();\n\n        draft.drawCounts = 0;\n\n        draft.foundations[action.payload.index].push({\n          ...action.payload.movedCard,\n          state: CardState.Foundation,\n          index: action.payload.index,\n          isDragging: false,\n        });\n        draft.score.push(10);\n\n        draft.foundations = draft.foundations.map((column, index) => {\n            if (index !== action.payload.index) {\n              return column.filter(card => card.id !== action.payload.movedCard.id)\n            } else {\n              return column\n            }\n          }\n        )\n\n        if (action.payload.movedCard.state === CardState.Deck) {\n          draft.waste = draft.waste.filter(card => card.id !== action.payload.movedCard.id);\n        } else {\n          draft.tableuPiles[action.payload.movedCard.index] = draft.tableuPiles[action.payload.movedCard.index].filter(\n            card => card.id !== action.payload.movedCard.id\n          );\n        }\n      });\n    //Add dragged card(s) to tableuPile and remove from source\n    case GameActionTypes.TableuPileAddCards:\n      return produce(state, draft => {\n        draft.sound && cardSetSound.play();\n        draft.drawCounts = 0;\n        draft.score.push(5);\n        if (action.payload.movedCard.state === CardState.TableuPile) {\n          draft.undoStepsCount = -2;\n          const indexOfCard = draft.tableuPiles[action.payload.movedCard.index].findIndex(\n            card => card.id === action.payload.movedCard.id\n          );\n          const cardsToAdd = draft.tableuPiles[action.payload.movedCard.index]\n            .slice(indexOfCard)\n            .map(card => ({...card, index: action.payload.index, isDragging: false}));\n          const cardsLeft = draft.tableuPiles[action.payload.movedCard.index].slice(0, indexOfCard);\n          draft.tableuPiles[action.payload.index] = [...draft.tableuPiles[action.payload.index], ...cardsToAdd];\n          draft.tableuPiles[action.payload.movedCard.index] = cardsLeft;\n        } else {\n          draft.tableuPiles[action.payload.index].push({\n            ...action.payload.movedCard,\n            state: CardState.TableuPile,\n            index: action.payload.index,\n            isDragging: false\n          });\n\n          if (action.payload.movedCard.state === CardState.Deck) {\n            draft.undoStepsCount = -1;\n            draft.waste = draft.waste.filter(card => card.id !== action.payload.movedCard.id);\n            if (!draft.waste.length && draft.deckDrawType === 3) {\n              draft.waste = [...draft.deck.splice(draft.deck.length - 3, draft.deck.length)];\n            }\n          } else {\n            draft.undoStepsCount = -1;\n            draft.foundations[action.payload.movedCard.index] = draft.foundations[\n              action.payload.movedCard.index\n              ].filter(card => card.id !== action.payload.movedCard.id);\n          }\n        }\n      });\n\n    case GameActionTypes.TurnCard:\n      return produce(state, draft => {\n        draft.tableuPiles[action.payload.index].map((card, i) => {\n          if (card.id === action.payload.id && i === draft.tableuPiles[action.payload.index].length - 1) {\n            card.hidden = false;\n            return card;\n          }\n          return card;\n        });\n      });\n\n    case GameActionTypes.ChangeDeckDrawType :\n      return produce(state, draft => {\n        draft.deckDrawType = action.payload\n      });\n\n    case GameActionTypes.DrawCard:\n      return produce(state, draft => {\n        draft.undoStepsCount = -1;\n        if (draft.deck.length) {\n          if (draft.deckDrawType === 1) {\n            draft.sound && cardSetSound.play()\n            draft.waste.push(draft.deck.splice(0, 1)[0]);\n          } else {\n            if (draft.deckCount > 0) {\n              draft.sound && cardSetSound.play()\n              draft.deckCount = draft.deckCount - 3;\n              draft.deck = [...draft.deck, ...draft.waste];\n              draft.waste = [...draft.deck.splice(0, 3)];\n            } else {\n              draft.sound && dealCardsSound.play();\n              draft.deck = [...draft.deck, ...draft.waste];\n              draft.waste = [...draft.deck.splice(0, 3)];\n              draft.deckCount = 24;\n              draft.drawCounts += 1;\n            }\n          }\n        } else {\n          draft.sound && dealCardsSound.play();\n          draft.deck = [...draft.waste];\n          draft.waste = []\n          draft.waste.push(draft.deck.splice(0, 1)[0]);\n          draft.deckCount = 24;\n          draft.drawCounts += 1;\n        }\n      });\n\n    case GameActionTypes.NewGame:\n      return produce(state, draft => {\n        draft.tableuPiles = action.payload.tableuPiles;\n        draft.deck = action.payload.deck;\n        draft.waste = [];\n        draft.score = [];\n        draft.foundations = [[], [], [], []];\n        draft.drawCounts = 0;\n        draft.deckDrawType = draft.deckDrawType;\n        draft.deckCount = 24;\n      });\n\n    // Set isDragging to true if card is being dragged to hide it from view\n    case GameActionTypes.CardIsDragged:\n      return produce(state, draft => {\n        switch (action.payload.movedCard.state) {\n          case CardState.Deck:\n            draft.waste = draft.waste.map(card =>\n              card.id === action.payload.movedCard.id ? {\n                ...card,\n                isDragging: action.payload.isDragging,\n                preview: action.payload.preview\n              } : {...card}\n            );\n            break;\n\n          case CardState.Foundation:\n            draft.foundations[action.payload.movedCard.index] = draft.foundations[\n              action.payload.movedCard.index\n              ].map(card =>\n              card.id === action.payload.movedCard.id ? {\n                ...card,\n                isDragging: action.payload.isDragging,\n                preview: action.payload.preview\n              } : {...card}\n            );\n            break;\n\n          case CardState.TableuPile:\n            const indexOfCard = draft.tableuPiles[action.payload.movedCard.index].findIndex(\n              card => card.id === action.payload.movedCard.id\n            );\n            draft.tableuPiles[action.payload.movedCard.index] = draft.tableuPiles[\n              action.payload.movedCard.index\n              ].map((card, index) =>\n              index >= indexOfCard ? {\n                ...card,\n                isDragging: action.payload.isDragging,\n                preview: action.payload.preview\n              } : {...card}\n            );\n            break;\n        }\n      });\n    case GameActionTypes.CardDoubleClicked:\n      return produce(state, draft => {\n        draft.sound && cardSetSound.play()\n        const suitIndex = suits.indexOf(action.payload.doubleClickedCard.suit);\n\n        if (draft.foundations[suitIndex].length + 1 === action.payload.doubleClickedCard.rank) {\n          draft.score.push(10)\n          draft.drawCounts = 0;\n          draft.foundations[suitIndex].push({\n            ...action.payload.doubleClickedCard,\n            index: suitIndex,\n            state: CardState.Foundation\n          });\n\n          if (action.payload.doubleClickedCard.state === CardState.TableuPile) {\n            draft.tableuPiles[action.payload.doubleClickedCard.index] = draft.tableuPiles[\n              action.payload.doubleClickedCard.index\n              ].slice(0, -1);\n            draft.undoStepsCount = draft.tableuPiles[action.payload.doubleClickedCard.index].length > 0 ? -2 : -1;\n\n          } else if (action.payload.doubleClickedCard.state === CardState.Deck) {\n            draft.undoStepsCount = -1;\n            draft.waste = draft.waste.slice(0, -1);\n          }\n        }\n      });\n    case GameActionTypes.SwitchSound:\n      return produce(state, draft => {\n        draft.sound = action.payload\n      });\n    default:\n      return state;\n  }\n};\n\nexport const selectWaste = (state: RootState): PlayingCard[] => state.game.present.waste;\nexport const selectDeck = (state: RootState): PlayingCard[] => state.game.present.deck;\nexport const selectFoundations = (state: RootState): PlayingCard[][] => state.game.present.foundations;\nexport const selectTableuPiles = (state: RootState): PlayingCard[][] => state.game.present.tableuPiles;\nexport const selectScore = (state: RootState): number[] => state.game.present.score;\nexport const selectDrawCounts = (state: RootState): number => state.game.present.drawCounts;\nexport const selectDeckCount = (state: RootState): number => state.game.present.deckCount;\nexport const getSound = (state: RootState): boolean => state.game.present.sound;\nexport const getUndoStepsCount = (state: RootState): number => state.game.present.undoStepsCount;\nexport const selectNextFoundationCards = (state: RootState): string[] => {\n  return state.game.present.foundations.map((foundation, index) => `${foundation.length + 1}${suits[index]}`);\n};\nexport const selectDeckType = (state: RootState): 1 | 3 => state.game.present.deckDrawType;\n","import { StartNewGame } from \"./gameActions\";\n\nexport enum ScoreActionTypes {\n  GameIsOver = \"score/gameIsOver\",\n  GetScores = \"score/getScores\"\n}\n\nexport type GameIsOver = {\n  readonly type: ScoreActionTypes.GameIsOver;\n  readonly payload: number;\n};\n\nexport type GetScores = {\n  readonly type: ScoreActionTypes.GetScores;\n  readonly payload: number[];\n};\n\nexport const gameIsOver = (payload: number): GameIsOver => ({\n  type: ScoreActionTypes.GameIsOver,\n  payload\n});\n\nexport const getScores = (payload: number[]): GetScores => ({ type: ScoreActionTypes.GetScores, payload });\n\nexport type ScoreActions = StartNewGame | GameIsOver | GetScores;\n","import produce, {Draft} from \"immer\";\nimport {CardsActions, CardsActionsTypes, Cards} from \"actions/cardsActions\";\nimport {RootState} from \"store\";\n// import {PlayingCard} from \"interfaces/game\";\n\nexport interface CardsState {\n  cards: Cards;\n}\n\nexport const initialState: CardsState = {\n  cards: {\n  },\n};\n\nexport const cardsReducer = (state = initialState, action: CardsActions): CardsState => {\n  switch (action.type) {\n    case CardsActionsTypes.GetCards:\n      return produce(state, (draft: Draft<CardsState>) => {\n        draft.cards = action.payload;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const getCards = (state: RootState):CardsState => state.cards;\n","export enum HistoryActionTypes {\n  ClearHistory = \"history/ClearHistory\"\n}\n\nexport type ClearHistory = {\n  readonly type: HistoryActionTypes.ClearHistory;\n};\n\nexport const clearHistory = (): ClearHistory => ({\n  type: HistoryActionTypes.ClearHistory\n});\n\nexport type HistoryActions = ClearHistory;\n","import { ScoreActions, ScoreActionTypes } from \"actions/scoreActions\";\nimport { GameActionTypes } from \"actions/gameActions\";\nimport produce from \"immer\";\nimport { RootState } from \"store\";\nimport { createTimeString } from \"utils\";\n\ninterface ScoreState {\n  startTime: number;\n  isGameOver: boolean;\n  scores: number[];\n  gameWonTime: number | null;\n}\n\nexport const initialState: ScoreState = {\n  startTime: 0,\n  isGameOver: false,\n  scores: [],\n  gameWonTime: null,\n};\n\nexport const scoreReducer = (state = initialState, action: ScoreActions): ScoreState => {\n  switch (action.type) {\n    case GameActionTypes.NewGame:\n      return produce(state, draft => {\n        draft.startTime = Date.now();\n        draft.isGameOver = false;\n      });\n    case ScoreActionTypes.GetScores:\n      return produce(state, draft => {\n        draft.scores = [...action.payload];\n      });\n    case ScoreActionTypes.GameIsOver:\n      return produce(state, draft => {\n        draft.isGameOver = true;\n        draft.scores?.push(action.payload);\n        draft.gameWonTime = action.payload;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const selectIsGameOver = (state: RootState): boolean => state.score.isGameOver;\nexport const selectGameWonTime = (state: RootState): string | undefined => {\n  const gameWonTime = state.score.gameWonTime;\n  if (gameWonTime) {\n    return createTimeString(gameWonTime);\n  }\n};\nexport const selectStartTime = (state: RootState): number => state.score.startTime;\nexport const selectScores = (state: RootState): string[] | undefined | null => {\n  const scores = state.score.scores;\n  if (scores?.length) {\n    const newScores = [...scores];\n    return newScores\n      ?.slice(0, 10)\n      .sort((a: number, b: number) => a - b)\n      .map(score => createTimeString(score));\n  }\n  return null;\n};\n","import React, {memo, useEffect} from \"react\";\nimport {DragSourceMonitor, useDrag} from \"react-dnd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  addCardsToFoundation,\n  addCardsToTableuPile,\n  cardIsDragged,\n  handleDoubleClick,\n  turnCard,\n  TurnCard\n} from \"actions/gameActions\";\nimport {CardProps, CardState, PlayingCard} from \"interfaces/game\";\nimport {selectDeckType, selectNextFoundationCards} from \"reducers/gameReducer\";\nimport {getEmptyImage} from \"react-dnd-html5-backend\";\nimport {Dispatch} from \"redux\";\nimport {RootState} from \"../store\";\nimport {CardsState, getCards} from \"../reducers/cardsReducer\";\nimport {selectIsGameOver} from \"../reducers/scoreReducer\";\n\nexport const Card = memo(\n  ({card, offset, cards, isLastCard, isActive, gamePlace, indexInWaste}: CardProps): JSX.Element => {\n    const {hidden, id, index, type} = card;\n    const dispatch = useDispatch();\n    const nextFoundationCards = useSelector(selectNextFoundationCards);\n    const [{isDragging, item}, drag, preview] = useDrag({\n      item: {type, card},\n      end: (item: { type: string; card: PlayingCard } | undefined, monitor: DragSourceMonitor) => {\n        const dropResult = monitor.getDropResult();\n        if (item && dropResult) {\n          const nextState = dropResult.nextState;\n          if (nextState === CardState.TableuPile) {\n            dispatch(addCardsToTableuPile({movedCard: item.card, index: dropResult.index, nextState}));\n          } else if (nextState === CardState.Foundation) {\n            dispatch(addCardsToFoundation({movedCard: item.card, index: dropResult.index, nextState}));\n          }\n        }\n        if (item && !dropResult) {\n          dispatch(cardIsDragged({movedCard: item.card, isDragging: false, preview}));\n        }\n        if (cards.length >= 2 && gamePlace === \"pile\") {\n          const openedCardsAmount = cards.filter(card => !card.hidden)\n          const lastAfterDragCard = cards[cards.length -\n          ((\n              openedCardsAmount.length > 1 && openedCardsAmount.length !== cards.length) ?\n              (openedCardsAmount.length + 1) :\n              2\n          )]\n          dispatch(turnCard({index: lastAfterDragCard.index, id: lastAfterDragCard.id}))\n        }\n      },\n      collect: monitor => ({\n        isDragging: monitor.isDragging(),\n        item: monitor.getItem()\n      }),\n      canDrag: () => (card.hidden ? false : true)\n    });\n\n    const checkDoubleClick = (card: PlayingCard, nextFoundationCards: string[], dispatch: Dispatch): void => {\n      if (nextFoundationCards.find(nextCard => nextCard === card.id)) {\n        dispatch(handleDoubleClick({doubleClickedCard: card}));\n      }\n      if (gamePlace === \"pile\") {\n        if (cards.length >= 2) {\n          const lastAfterDragCard = cards[cards.length - 2]\n          dispatch(turnCard({index: lastAfterDragCard.index, id: lastAfterDragCard.id}))\n        }\n      }\n    };\n    useEffect(() => {\n      if (item && item.card && isDragging) {\n        dispatch(cardIsDragged({movedCard: item.card, isDragging, preview}));\n      }\n    }, [isDragging, item, dispatch]);\n\n    useEffect(() => {\n      preview(getEmptyImage(), {captureDraggingState: false});\n    }, [preview]);\n\n    function isBackside() {\n      if (gamePlace !== \"talon\") {\n        return (hidden)\n      }\n    }\n\n    function isDraggable() {\n      if (gamePlace !== \"talon\") {\n        return (hidden && !isLastCard)\n      } else {\n        return isLastCard\n      }\n    }\n\n    const isGameOver = useSelector<RootState, boolean>(selectIsGameOver);\n    const fetchedCards = useSelector<RootState, CardsState>(getCards);\n    const deckType = useSelector<RootState, 1 | 3>(selectDeckType);\n\n    return Object.keys(fetchedCards.cards).length ? (\n      <>{isBackside() ?\n        <div className={'card-backside playing-card'}\n             style={{top: offset, opacity: isActive ? .7 : 1}}\n        >\n          <img\n            alt=\"deck\"\n            src={`data:image/png;base64,${fetchedCards.cards[\"1B\"]}`}\n            onDragStart={(e): void => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n          />\n        </div> :\n        <img\n          alt={card.id}\n          ref={(!isGameOver && isDraggable) ? drag : null}\n          className={`playing-card`}\n          src={`data:image/png;base64,${fetchedCards.cards[card.id]}`}\n          style={{\n            top: offset,\n            right: (gamePlace === \"talon\" && deckType === 3) ? `${indexInWaste === 2 ? 'unset' : indexInWaste === 1 ? 20 : 40}px` : \"unset\",\n            display: card.isDragging ? \"none\" : undefined,\n            opacity: isActive ? .7 : 1\n          }}\n          onClick={(): TurnCard => dispatch(turnCard({index, id}))}\n          onDoubleClick={isLastCard ? (): void => checkDoubleClick(card, nextFoundationCards, dispatch) : undefined}\n          onDragStart={(e): void => {\n            if (card.hidden) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          }}\n        />}\n      </>\n    ) : <></>\n  }\n);\n\nexport default Card;\n","import React, {useCallback} from \"react\";\nimport Card from \"./Card\";\nimport {useDrop} from \"react-dnd\";\nimport {CardState, DraggedItem, Pile, PlayingCard} from \"interfaces/game\";\nimport {getOffSet, useMedia} from \"utils\";\nimport {typeOfCard} from \"dragTypes\";\n\nconst getDroppable = (item: DraggedItem, cards: PlayingCard[]): boolean => {\n  // @ts-ignore\n  // console.log(item, cards[cards.length - 1].color)\n  if (cards.length === 0 && item && item.card && item.card.rank === 13) {\n    return true;\n  } else if (cards.length === 0) {\n    return false;\n  } else if (\n    item &&\n    item.card &&\n    item.card.rank === cards[cards.length - 1].rank - 1 &&\n    item.card.color !== cards[cards.length - 1].color\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const TableuPile = ({cards, index}: Pile): JSX.Element => {\n  const nextState = CardState.TableuPile;\n  // eslint-disable-next-line\n  const [{canDrop, isOver}, drop] = useDrop({\n    accept: typeOfCard,\n    canDrop: (item: any) => getDroppable(item, cards),\n    drop: () => ({index, nextState}),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const xsh = useMedia('(max-height: 550px)');\n  const xs = useMedia(\"(max-width: 525px)\");\n  const sm = useMedia(\"(max-width: 710px)\");\n  const md = useMedia(\"(max-width: 940px)\");\n\n  const getOffsetByMedia = useCallback((): number => {\n    if(xsh){\n      return 15\n    } else if (xs) {\n      return 15;\n    } else if (sm) {\n      return 21;\n    } else if (md) {\n      return 27;\n    } else return 33;\n  }, [xs, sm, md]);\n\n  return (\n    <div ref={drop} className=\"drop-target\">\n      <div className=\"card-border\">\n        {cards.map((card: PlayingCard, i: number) => (\n          <Card\n            offset={getOffSet(i, getOffsetByMedia())}\n            key={card.id}\n            card={card}\n            isActive={isOver}\n            indexInWaste={i}\n            isLastCard={i === cards.length - 1 ? true : false}\n            gamePlace={\"pile\"}\n            cards={cards}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {Card} from \"./Card\";\nimport {useSelector} from \"react-redux\";\nimport {selectDeckType, selectWaste} from \"reducers/gameReducer\";\nimport {RootState} from \"store\";\nimport {PlayingCard} from \"interfaces/game\";\n\nexport const Talon = (): JSX.Element => {\n    const waste = useSelector<RootState, PlayingCard[]>(selectWaste);\n    const deckType = useSelector<RootState, 1 | 3>(selectDeckType);\n    return (\n      <div className=\"drop-target\" style={{alignSelf: \"flex-end\", display: \"flex\", flexDirection: \"row-reverse\"}}>\n        {(deckType === 1) ?\n          !!waste?.length && waste.map((card, i) => {\n              return <Card key={card.id} card={card} isActive={false} cards={waste} gamePlace={'talon'}\n                           isLastCard={i === waste.length - 1} indexInWaste={i + 1}/>\n            }\n          ) : (waste.length > 0 && deckType === 3) ?\n            <>\n              {\n                !!waste?.length && waste.map((card, i) => {\n                  return <Card key={card.id} card={card} isActive={false} cards={waste} gamePlace={'talon'}\n                               indexInWaste={i}\n                               isLastCard={i === waste.length - 1}/>\n                })\n              }\n            </> : <></>\n        }\n      </div>\n    );\n  }\n;\n","import React from \"react\";\nimport {Talon} from \"./Talon\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {drawCard, DrawCard} from \"actions/gameActions\";\nimport {selectDeck, selectDeckCount} from \"reducers/gameReducer\";\nimport {RootState} from \"../store\";\nimport {CardsState, getCards} from \"../reducers/cardsReducer\";\n\nexport const Stock = ({classes = \"stocks\"}): JSX.Element => {\n  const deck = useSelector(selectDeck);\n  const dispatch = useDispatch();\n\n  const fetchedCards = useSelector<RootState, CardsState>(getCards);\n  const deckCount = useSelector<RootState, number>(selectDeckCount);\n\n  return (\n    <div className={classes}>\n      <div className=\"stock-opened-cards\">\n        <Talon/>\n      </div>\n      {/*<div/>*/}\n      {Object.keys(fetchedCards.cards).length ? (deck.length > 0 && !(deckCount < 1)) ? (\n        <picture>\n          <div className={'drop-target card-backside playing-card'}>\n            <img\n              alt=\"deck\"\n              src={`data:image/png;base64,${fetchedCards.cards[\"1B\"]}`}\n              onClick={(): DrawCard => dispatch(drawCard())}\n              onDragStart={(e): void => {\n                e.preventDefault();\n                e.stopPropagation();\n              }}\n            />\n          </div>\n        </picture>\n      ) : (\n        <div className=\"drop-target\" onClick={(): DrawCard => dispatch(drawCard())}>\n          <div className=\"card-border\">\n            <img\n              alt=\"deck\"\n              src={require(`../assets/reload.svg`)}\n              style={{alignSelf: \"center\"}}\n              className=\"p-5\"\n              onDragStart={(e): void => {\n                e.preventDefault();\n                e.stopPropagation();\n              }}\n            />\n          </div>\n        </div>\n      ) : <></>}\n    </div>\n  );\n};\n","import React from \"react\";\nimport {useDrop} from \"react-dnd\";\nimport {Card} from \"./Card\";\nimport {CardState, PlayingCard} from \"interfaces/game\";\nimport {useSelector} from \"react-redux\";\nimport {selectFoundations, selectTableuPiles} from \"reducers/gameReducer\";\nimport {RootState} from \"store\";\nimport {typeOfCard} from \"dragTypes\";\n\ninterface DraggedItem {\n  type: string;\n  card: PlayingCard;\n}\n\ninterface FoundationProps {\n  cards: PlayingCard[];\n  index: number;\n  foundationSuit: string;\n  nextCard: number;\n}\n\nconst getDroppable = (\n  item: DraggedItem,\n  nextCard: number,\n  foundationSuit: string,\n  tableuPile: PlayingCard[],\n  foundations: PlayingCard[][],\n  index: number\n): boolean => {\n  const id = item.card?.id;\n  if (item?.card?.state === CardState.TableuPile) {\n    if (item.card.id !== tableuPile[tableuPile.length - 1].id) {\n      return false;\n    }\n  }\n  if (item.card.rank === 1 && foundations?.[index].length === 0) {\n    return true\n  }\n\n  return id === `${foundations?.[index]?.[foundations?.[index]?.length - 1]?.rank + 1}${foundations?.[index]?.[0]?.suit}`;\n\n};\n\nexport const Foundation = ({cards, index, foundationSuit, nextCard}: FoundationProps): JSX.Element => {\n  const foundations = useSelector<RootState, PlayingCard[][]>(selectFoundations);\n  const nextState = CardState.Foundation;\n  const tableuPiles = useSelector<RootState, PlayingCard[][]>(selectTableuPiles);\n  // eslint-disable-next-line\n  const [{canDrop, isOver}, drop] = useDrop({\n    accept: typeOfCard,\n    canDrop: (item: DraggedItem) => {\n      return getDroppable(item, nextCard, foundationSuit, tableuPiles[item.card.index], foundations, index)\n    },\n    drop: () => ({\n      index,\n      nextState\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n\n  return (\n    <div ref={drop} className=\"drop-target\">\n      <div className=\"card-border\">\n        {cards.map((card: PlayingCard, i: number) => (\n          <Card offset={0} key={card.id} card={card} cards={cards} indexInWaste={i} isActive={isOver} gamePlace={'foundation'} isLastCard={i === cards.length - 1 ? true : false}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, {memo, useCallback, useMemo, useState} from \"react\";\nimport Preview from \"react-dnd-preview\";\nimport {CardState, PlayingCard, PreviewObject} from \"interfaces/game\";\nimport {getOffSet, useMedia} from \"utils\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../store\";\nimport {CardsState, getCards} from \"../reducers/cardsReducer\";\n\nconst createPreviewCards = (draggedCard: PlayingCard | null, tableuPiles: PlayingCard[][]): PlayingCard[] => {\n  if (draggedCard) {\n    const indexOfCard = tableuPiles[draggedCard.index].findIndex(card => card.id === draggedCard.id);\n    return tableuPiles[draggedCard.index].filter((card, index) => index >= indexOfCard);\n  }\n  return [];\n};\n\ninterface CardDragPreviewProps {\n  tableuPiles: PlayingCard[][];\n}\n\n// eslint-disable-next-line react/display-name\nexport const CardDragPreview = memo(\n  ({tableuPiles}: CardDragPreviewProps): JSX.Element => {\n    const [draggedCard, setDraggedCard] = useState<PlayingCard | null>(null);\n    const memoizedPreview = useMemo(() => createPreviewCards(draggedCard, tableuPiles), [draggedCard, tableuPiles]);\n\n    const xs = useMedia(\"(max-width: 525px)\");\n    const sm = useMedia(\"(max-width: 710px)\");\n    const md = useMedia(\"(max-width: 940px)\");\n\n    const fetchedCards = useSelector<RootState, CardsState>(getCards)\n\n    const getOffsetByMedia = useCallback((): number => {\n      if (xs) {\n        return 15;\n      } else if (sm) {\n        return 21;\n      } else if (md) {\n        return 27;\n      } else return 33;\n    }, [xs, sm, md]);\n\n    const generatePreview = ({item, style}: PreviewObject): JSX.Element => {\n      if (item && item.card) {\n        setDraggedCard(item.card);\n      }\n      if (item && item.card.state === CardState.TableuPile) {\n        return Object.keys(fetchedCards.cards).length ? (\n          <div style={{...style, zIndex: 50}}>\n            {memoizedPreview.map((card, i) => (\n              <img\n                alt={item.card.id}\n                key={card.id}\n                className=\"playing-card\"\n                src={`data:image/png;base64,${fetchedCards.cards[card.id]}`}\n                style={{top: getOffSet(i, getOffsetByMedia())}}\n              />\n            ))}\n          </div>\n        ) : <></>\n      }\n      return Object.keys(fetchedCards.cards).length ? (\n        <img\n          alt={item.card.id}\n          className=\"playing-card\"\n          src={`data:image/png;base64,${fetchedCards.cards[item.card.id]}`}\n          style={{...style, top: getOffSet(0, getOffsetByMedia()), zIndex: 50}}\n        />\n      ) : <></>\n    };\n\n    return <Preview generator={generatePreview}/>;\n  }\n);\n","import React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectNextFoundationCards} from \"reducers/gameReducer\";\nimport {createTimeString, suits} from \"utils\";\nimport {selectIsGameOver, selectStartTime} from \"reducers/scoreReducer\";\nimport {gameIsOver} from \"actions/scoreActions\";\nimport {RootState} from \"../store\";\nimport {CardsState, getCards} from \"../reducers/cardsReducer\";\n\nexport const Timer = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const startTime = useSelector(selectStartTime);\n  const isGameOver = useSelector(selectIsGameOver);\n  const [gameTime, setGameTime] = useState<number>(0);\n  const nextFoundationCards = useSelector(selectNextFoundationCards);\n  const fetchedCards = useSelector<RootState, CardsState>(getCards);\n\n  useEffect(() => {\n    if (!isGameOver && Object.keys(fetchedCards.cards).length) {\n      setGameTime(0);\n      const interval = setInterval(() => setGameTime(Date.now() - startTime), 1000);\n      return (): void => {\n        clearInterval(interval);\n      };\n    }\n  }, [startTime, isGameOver, fetchedCards]);\n\n  useEffect(() => {\n    if (!isGameOver && nextFoundationCards.every((nextCard, i) => nextCard === `14${suits[i]}`)) {\n      // const scores = JSON.parse(localStorage.getItem(\"scores\") || \"{}\") as number[];\n      // if (scores && scores.length > 0) {\n      //   scores.push(gameTime);\n      //   localStorage.setItem(\"scores\", JSON.stringify(scores));\n      // } else {\n      //   const scores: number[] = [gameTime];\n      //   localStorage.setItem(\"scores\", JSON.stringify(scores));\n      // }\n      dispatch(gameIsOver(gameTime));\n    }\n  }, [nextFoundationCards, dispatch, gameTime, isGameOver]);\n\n  return (\n    <div className=\"game-timer-container\">\n      <p className=\"game-timer\">Time: {createTimeString(gameTime)}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface GameButtonProps {\n  handleClick: Function;\n  icon: string;\n  text: string;\n  styled: boolean;\n}\n\nexport const GameButton = ({ icon, handleClick, text, styled }: GameButtonProps): JSX.Element => {\n  return (\n    <button className={`${styled && \"game-styled-button\"} game-button`} onClick={(): void => handleClick()}>\n      <div className=\"button-wrapper\">\n        {icon && <img className=\"svg-icon\" src={require(`../assets/${icon}.svg`)} alt={icon} />}\n        <span className=\"button-text\">{text}</span>\n      </div>\n    </button>\n  );\n};\n","import React from \"react\";\nimport {Modal} from \"reactstrap\";\nimport \"../../modal.scss\"\n\nexport default function Loader({requestState}){\n    return (\n    <Modal isOpen={requestState.pending} className={`loader-wrapper cas_modal`}>\n            <div className=\"loader\">Loading...</div>\n    </Modal>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\";\nimport ReactCodeInput from \"react-code-input\";\nimport {decks} from \"../../utils\";\nimport {setCards} from \"../../actions/cardsActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport deal_cards from \"../../assets/sounds/deal_cards.wav\";\nimport {getSound} from \"../../reducers/gameReducer\";\n\nfunction playSound(dealCardsSound) {\n  dealCardsSound.play()\n}\n\nexport default function PINModal({setRequestState, requestState, setCong, modal, setModal, gameType}) {\n  const {pathname} = window.location\n  const [error, setError] = useState(null);\n  const [pin, setPin] = useState(\"\");\n  const inputProps = {\n    inputStyle: {\n      height: 44,\n      width: 40,\n      border: !requestState.error ? \"2px solid rgba(0,0,0,0.5)\" : \"2px solid #E73C3D\",\n      outlineColor: !requestState.error ? \"rgba(0,0,0,0.5)\" : \"#E73C3D\",\n      // outlineColor: !error ? \"#197532\" : \"#E73C3D\",\n      borderRadius: 5,\n      fontSize: \"25px\",\n      fontWeight: \"700\",\n      textAlign: \"center\",\n      boxShadow: \"rgb(0 0 0 / 25%) 0px 0px 10px 0px\",\n    },\n  };\n\n  useEffect(() => {\n    if (gameType.length) {\n      if (gameType === \"paid\") {\n        setModal(true)\n      } else {\n        onCLickPlay()\n      }\n    }\n  }, [gameType])\n\n  const dispatch = useDispatch();\n  const sound = useSelector(getSound);\n\n  const onCLickPlay = (e) => {\n    e && e.preventDefault();\n    setRequestState(requestState => ({...requestState, pending: true}))\n    fetch(`https://giftsolitaire.com/api/v1/decks/web${pathname}${gameType === \"paid\" ? '/?pin=' + pin : ''}`)\n      .then(res => {\n        if (!res.ok) throw new Error(res)\n        return res.json()\n      })\n      .then(cards => {\n        const rewrittenFetchedCards = {};\n        Object.keys(cards).forEach(card => {\n          // @ts-ignore\n          rewrittenFetchedCards[decks[card]] = cards[card]\n        })\n        setRequestState(requestState => ({...requestState, pending: false, fulfilled: true}))\n        setModal(false);\n        setCong(true);\n        return rewrittenFetchedCards\n      }).then(cards => {\n      const dealCardsSound = new Audio(deal_cards);\n      sound && playSound(dealCardsSound)\n      dispatch(setCards(cards))\n    }).catch(() => {\n      setRequestState({pending: false, fulfilled: true, error: true})\n    })\n  }\n\n  useEffect(() => {\n    pin.length < 4 ?\n      setError(\"Fields must be filled\") :\n      setError(null)\n  }, [pin]);\n\n  return (\n    <Modal className=\"pin-modal\" isOpen={modal}>\n      <form onSubmit={onCLickPlay}>\n        <ModalBody>\n          <h5 className={'pin-title'}>Enter PIN-code</h5>\n          <div className={\"input-cont\"}>\n            <ReactCodeInput name=\"PIN-fields\" type='number' fields={4} value={pin} onChange={e => {\n              setPin(e)\n            }}\n                            inputMode={\"numeric\"}\n                            {...inputProps}\n            />\n            <p className=\"description\">If you do not know the PIN, then check\n              with the person who sent you the link</p>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <a className={`d-flex align-items-center justify-content-center`} href=\"https://giftsolitaire.com/\">\n            <button type=\"button\">Cancel</button>\n          </a>\n          <hr/>\n          <button disabled={error} type='submit'>Play</button>\n        </ModalFooter>\n      </form>\n    </Modal>\n  )\n}\n","import React from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\"\nimport black_undo from \"../../assets/black_undo.svg\"\nimport play_icon from \"../../assets/icon_play.svg\"\n\nexport default function GameOverModal({modal, setModal, handleStartNewGame, handleUndoMove}) {\n\n  return (\n    <Modal className=\"game-over-modal\" isOpen={modal}  toggle={() => setModal(s => !s)}>\n      <ModalBody>\n        <h5 className={'game-over-title'}>\n          The Turns in the Game\n          are Over</h5>\n      </ModalBody>\n      <ModalFooter>\n        <div className={'game-over-options'}>\n          <button onClick={handleUndoMove}>\n            <img src={black_undo} alt=\"\"/>\n            Undo\n          </button>\n          <button onClick={handleStartNewGame}>\n            <img src={play_icon} alt=\"\"/>\n            New Game\n          </button>\n        </div>\n        <a className={`d-flex align-items-center justify-content-center`} href=\"https://giftsolitaire.com/\">\n          <button className={'exit'}>\n            Exit Game\n          </button>\n        </a>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import React from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\"\n\nexport default function ExitGameModal({modal, setModal}) {\n\n  return (\n    <Modal className=\"exit-modal\" isOpen={modal}>\n      <ModalBody>\n        <h5 className={'exit-title'}>The Game will be Over</h5>\n      </ModalBody>\n      <ModalFooter>\n        <button onClick={() => setModal(false)}>Back</button>\n        <hr/>\n        <a className={`d-flex align-items-center justify-content-center`} href=\"https://giftsolitaire.com/\">\n          <button onClick={() => setModal(false)}>Yes</button>\n        </a>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {changeDeckDrawType, startNewGame, switchSound} from \"../../actions/gameActions\";\nimport {createNewGame} from \"../../utils\";\nimport {selectDeckType} from \"../../reducers/gameReducer\";\n\nconst CreateRadio = ({label, setState, state}) => (\n  <div onClick={() => setState(s => !s)} className={`setting-radio`}>\n    <p className={`mr-2`}>{label}</p>\n    <div className={`field ${state && \"active\"}`}>\n      <div className={`radio-circle`}/>\n    </div>\n  </div>\n)\n\nexport default function SettingsModal({modal, setModal}) {\n  const [animation, setAnimation] = useState(false);\n  const [agreement, setAgreement] = useState(false);\n  const [sound, setSound] = useState(true);\n  const [stockStatus, setStockStatus] = useState(1);\n  const dispatch = useDispatch();\n  const {tableuPiles, deck} = createNewGame();\n\n  useEffect(() => {\n    dispatch(switchSound(sound))\n  }, [sound])\n\n  const deckType = useSelector(selectDeckType)\n\n  function onAgreeToStartNew() {\n    setAgreement(false)\n    dispatch(changeDeckDrawType(stockStatus));\n    dispatch(startNewGame({tableuPiles, deck}));\n  }\n\n  function onClickRadio(type) {\n    setStockStatus(type);\n  }\n\n  return (\n    <>\n      {\n        !agreement ?\n          <Modal className=\"setting-modal\" isOpen={modal}>\n            <ModalBody>\n              <h5 className={'setting-title'}>Game Settings</h5>\n              <p>Dealing from the Stock</p>\n              <div className='stock-switch'>\n                <button className={stockStatus === 1 && \"active\"} onClick={() => onClickRadio(1)}>Turning 1 card\n                </button>\n                <button className={stockStatus === 3 && \"active\"} onClick={() => onClickRadio(3)}>Turning 3 cards\n                </button>\n              </div>\n              <div className={'setting-radios mt-3'}>\n                <CreateRadio label={'Animation'} state={animation} setState={setAnimation}/>\n                <CreateRadio label={'Sound'} state={sound} setState={setSound}/>\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <button onClick={() => {\n                (stockStatus !== deckType) && setAgreement(true)\n                setModal(false)\n              }}>Close\n              </button>\n            </ModalFooter>\n          </Modal> :\n          <Modal className=\"setting-modal-agreement\" isOpen={agreement}>\n            <ModalBody>\n              <h5 className={'setting-title'}>After changing the settings, <br/> the game will start over!</h5>\n            </ModalBody>\n            <ModalFooter>\n              <button onClick={() => {\n                setStockStatus(deckType);\n                setModal(true)\n                setAgreement(false);\n              }}>Close\n              </button>\n              <hr/>\n              <button onClick={onAgreeToStartNew}>Start new game</button>\n            </ModalFooter>\n          </Modal>\n      }\n    </>\n  )\n}\n","import React, {useState} from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\"\n\nexport default function StartNewGame({modal, setModal, onClick}) {\n  const [block, setBlock] = useState(false)\n\n  return (\n    <Modal className=\"exit-modal\" isOpen={modal}>\n      <ModalBody>\n        <h5 className={'exit-title'}>Start New Game</h5>\n      </ModalBody>\n      <ModalFooter>\n        <button onClick={() => setModal(false)}>Back</button>\n        <hr/>\n        <button disabled={block} onClick={() => {\n          setBlock(true);\n          onClick();\n          setTimeout(() => setBlock(false), 500)\n        }}>Yes</button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport style from './style.module.scss'\nimport {Modal} from \"reactstrap\";\nimport logo from './assets/logo.svg'\nimport close from './assets/fi-rr-cross-small.svg'\n\nexport default function InstallApp({open, setOpen}) {\n\n  let osCheck\n  let mobile = false\n\n  if (navigator.appVersion.indexOf(\"iPhone\") !== -1) {\n    mobile = true\n    osCheck = \"IOS\"\n  } else if (navigator.appVersion.indexOf(\"Android\") !== -1) {\n    mobile = true\n    osCheck = \"Android\"\n  } else {\n    mobile = false\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      {mobile && <Modal isOpen={open} className={style.install}>\n        <div className={style.installBlock}>\n          <div className={style.caption}>\n            <div className={style.logo}>\n              <img src={logo} alt=\"logo\"/>\n            </div>\n            <div className={`${style.installTxt} mr-2 ml-2`}>\n              <h3>Create this game</h3>\n              <p>in the Gift Solitare App</p>\n            </div>\n          </div>\n          <div className={`${style.icons}`}>\n            <a className={style.installButtons} href=\"http://onelink.to/r8568s\">\n              Install\n            </a>\n          </div>\n        </div>\n        <div className={style.close} onClick={handleClose}>\n          <img src={close} alt=\"close\"/>\n        </div>\n      </Modal>}\n    </>\n\n  )\n}\n","import React from 'react'\nimport style from './style.module.scss'\nimport img from './assets/icon_cup.svg'\nimport win from \"../../../assets/sounds/win.wav\";\nimport {useSelector} from \"react-redux\";\nimport {getSound} from \"../../../reducers/gameReducer\";\n\nconst winSound = new Audio(win);\nexport default function Win({scores, gameWonTime}) {\n  const sound = useSelector(getSound);\n  sound && winSound.play();\n  return (\n    <div className={style.win}>\n      <div className={style.img}>\n        <img src={img} alt=\"img\"/>\n      </div>\n\n      <div className={style.contentText}>\n        <h1>You Win!</h1>\n        <div className={`d-flex align-items-center`}>\n          {scores && <p className=\"score\">\n            Score: {scores.length ? scores.reduce((a, b) => a + b) : 0}\n          </p>}\n          <p>Time: {gameWonTime}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport {Modal, ModalBody, ModalFooter} from 'reactstrap';\nimport \"./modal.scss\"\nimport gift from \"../../assets/icon_gift.svg\"\n\nexport default function Congratulations({modal, setModal, congratulations, setInstall}) {\n\n  return (\n    <Modal className=\"gift-modal\" isOpen={modal} toggle={() => {\n      setModal(s => !s)\n      setInstall(true)\n    }}>\n      <ModalBody style={{minHeight: 250}} className={`d-flex align-items-center flex-column`}>\n        <img src={gift} className={`mb-3`} alt=\"\"/>\n        <h5 className={'gift-title text-center'}>\n          {congratulations}\n        </h5>\n      </ModalBody>\n      <ModalFooter className={`d-flex justify-content-center align-items-start`}\n                   style={{borderTop: \"none\", height: 80}}>\n        <button className={`gift-close-btn`} onClick={() => {\n          setModal(s => !s)\n          setInstall(true)\n        }}>Ok. Thanks!\n        </button>\n      </ModalFooter>\n    </Modal>\n  )\n}\n","import React, {useEffect, useState} from \"react\";\nimport {TableuPile} from \"components/TableuPile\";\nimport {Stock} from \"components/Stock\";\nimport {Foundation} from \"components/Foundation\";\nimport {\n  getSound, getUndoStepsCount,\n  selectDrawCounts,\n  selectFoundations,\n  selectScore,\n  selectTableuPiles,\n  selectWaste\n} from \"reducers/gameReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {GameActions, startNewGame, undoMove} from \"actions/gameActions\";\nimport {PlayingCard} from \"interfaces/game\";\nimport {createNewGame, suits} from \"utils\";\nimport {RootState} from \"store\";\nimport {CardDragPreview} from \"components/CardDragPreview\";\nimport {Dispatch} from \"redux\";\nimport {Timer} from \"components/Timer\";\nimport {GameButton} from \"components/GameButton\";\nimport {getScores, ScoreActions} from \"actions/scoreActions\";\nimport {selectGameWonTime, selectIsGameOver} from \"reducers/scoreReducer\";\nimport {clearHistory, HistoryActions} from \"actions/historyActions\";\nimport setting_icon from \"../assets/setting.svg\";\nimport Loader from \"../components/Modals/Loader\";\nimport PINModal from \"../components/Modals/PIN-modal\";\nimport GameOverModal from \"../components/Modals/GameOverModal\";\nimport ExitGameModal from \"../components/Modals/ExitGameModal\";\nimport SettingsModal from \"../components/Modals/SettingsModal\";\nimport StartNewGame from \"../components/Modals/StartNewGame\";\nimport InstallApp from \"../components/Modals/InstallApp\";\nimport Win from \"../components/Modals/Win/index\";\nimport card_return from \"../assets/sounds/card_return.wav\";\nimport deal_cards from \"../assets/sounds/deal_cards.wav\";\nimport Congratulations from \"../components/Modals/Congratulations\";\nimport {ActionCreators} from \"redux-undo\";\n\nconst dealCardsSound = new Audio(deal_cards);\nconst cardReturnSound = new Audio(card_return);\nconst Game = (): JSX.Element => {\n  const [requestState, setRequestState] = useState({\n    pending: true,\n    fulfilled: false,\n    error: null\n  });\n  const [gameOverModal, setGameOverModal] = useState(false);\n  const [openInstall, setOpenInstall] = useState(false)\n  const [congratulationsM, setCongratulationsM] = useState(false);\n  const [gameType, setGameType] = useState('');\n  const [exitModalOpen, setExitModalOpen] = useState(false);\n  const [startNewGameModal, setStartNewGameModal] = useState(false);\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false)\n  const dispatch = useDispatch<Dispatch<GameActions | ScoreActions | HistoryActions>>();\n  const tableuPiles = useSelector<RootState, PlayingCard[][]>(selectTableuPiles);\n  const foundations = useSelector<RootState, PlayingCard[][]>(selectFoundations);\n  const gameWonTime = useSelector<RootState, string | undefined>(selectGameWonTime);\n  const isGameOver = useSelector<RootState, boolean>(selectIsGameOver);\n  const drawCount = useSelector<RootState, number>(selectDrawCounts);\n  const sound = useSelector<RootState, boolean>(getSound);\n  const [pinCodeModal, setPinCodeModal] = useState(false);\n  const [congratulations, setCongratulations] = useState('')\n\n  useEffect(() => {\n    const {tableuPiles, deck} = createNewGame();\n    dispatch(startNewGame({tableuPiles, deck}));\n  }, [dispatch]);\n  useEffect(() => {\n    const scores = JSON.parse(localStorage.getItem(\"scores\") || \"{}\") as number[];\n    if (scores && scores.length > 0) {\n      dispatch(getScores(scores));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    (drawCount !== 0 && drawCount % 5 === 0) && setGameOverModal(true);\n  }, [drawCount])\n\n  const undoStepsCount = useSelector<RootState, number>(getUndoStepsCount)\n\n  const handleUndoMove = (): void => {\n    sound && cardReturnSound.play()\n    // dispatch(undoMove());\n    dispatch(ActionCreators.jump(undoStepsCount))\n    setGameOverModal(false);\n  };\n\n  const handleStartNewGame = (): void => {\n    setStartNewGameModal(false);\n    setGameOverModal(false);\n    const {tableuPiles, deck} = createNewGame();\n    dispatch(clearHistory());\n    dispatch(startNewGame({tableuPiles, deck}));\n    sound && dealCardsSound.play();\n  };\n\n  const {pathname} = window.location;\n\n  useEffect(() => {\n    fetch(`https://giftsolitaire.com/api/v1/decks/web/check${pathname}`)\n      .then(res => res.json())\n      .then(({congratulations, is_demo}) => {\n        setCongratulations(congratulations)\n        setGameType(!is_demo ? \"paid\" : \"demo\")\n        // @ts-ignore\n        setRequestState({pending: false, fulfilled: false, error: false})\n      }).catch((error) => {\n      // @ts-ignore\n      setRequestState({pending: false, fulfilled: false, error: false})\n    })\n  }, [])\n\n  const gameScores = useSelector<RootState, number[]>(selectScore)\n  const waste = useSelector<RootState, PlayingCard[]>(selectWaste)\n\n  return (\n    <>\n      <Loader requestState={requestState}/>\n      <GameOverModal handleStartNewGame={handleStartNewGame} handleUndoMove={handleUndoMove} modal={gameOverModal}\n                     setModal={setGameOverModal}/>\n      <ExitGameModal modal={exitModalOpen} setModal={setExitModalOpen}/>\n      <StartNewGame modal={startNewGameModal} setModal={setStartNewGameModal} onClick={handleStartNewGame}/>\n      <SettingsModal setModal={setSettingsModalOpen} modal={settingsModalOpen}/>\n      <PINModal setRequestState={setRequestState} gameType={gameType} setCong={setCongratulationsM}\n                requestState={requestState} modal={pinCodeModal}\n                setModal={setPinCodeModal}/>\n      <Congratulations setModal={setCongratulationsM} setInstall={setOpenInstall} modal={congratulationsM}\n                       congratulations={congratulations}/>\n      <InstallApp open={openInstall} setOpen={setOpenInstall}/>\n      {isGameOver && <Win scores={gameScores} gameWonTime={gameWonTime}/>}\n      <CardDragPreview tableuPiles={tableuPiles}/>\n      <div className=\"mainCont\">\n        <div className=\"head\">\n          <GameButton handleClick={() => {\n            setExitModalOpen(true)\n          }} icon=\"right-arrow\" text={\"\"} styled={false}/>\n          <div className=\"game-widgets\">\n            {/*<GameButton icon=\"trophy\" handleClick={handleScores} text=\"SCORES\"/>*/}\n            <p\n              className={`m-0 d-flex align-items-center score`}>Score: {gameScores.length ? gameScores.reduce((a, b) => a + b) : 0}</p>\n            <Timer/>\n            <button onClick={() => setSettingsModalOpen(true)} className='settings-widget'>\n              <img src={setting_icon} alt=\"\"/>\n            </button>\n          </div>\n        </div>\n        <div className=\"desc\">\n          <div className=\"desc-head\">\n            <div className=\"foundations\">\n              {foundations.length &&\n              foundations.map((foundation, i) => {\n                return (\n                  <Foundation\n                    key={i.toString()}\n                    cards={foundation}\n                    index={i}\n                    foundationSuit={suits[i]}\n                    nextCard={foundation.length + 1}\n                  />\n                )\n              })}\n            </div>\n            <Stock classes={\"stocks top-stock\"}/>\n          </div>\n          <div className=\"desc-right\">\n            <div className=\"tableu-piles\">\n              {tableuPiles.map((pile, i) => (\n                <TableuPile cards={pile} key={i.toString()} index={i}/>\n              ))}\n            </div>\n            <Stock classes={\"stocks bottom-stock\"}/>\n          </div>\n        </div>\n      </div>\n      <div className=\"game-action-buttons\">\n        {!isGameOver && <GameButton icon=\"\" handleClick={() => setStartNewGameModal(true)} text=\"New game\" styled={true}/>}\n        {!!(gameScores?.length || waste.length) && !isGameOver &&\n        <GameButton icon=\"undo\" handleClick={handleUndoMove} text=\"Undo\" styled={true}/>}\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n","import React from \"react\";\nimport {DndProvider} from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport TouchBackend from \"react-dnd-touch-backend\";\n// import 'bootstrap/dist/css/bootstrap.min.scss';\nimport Game from \"views/Game\";\nimport MultiBackend, {MouseTransition, TouchTransition} from \"react-dnd-multi-backend\";\n\nconst CustomHTML5toTouch = {\n  backends: [\n    {\n      backend: HTML5Backend,\n      transition: MouseTransition\n      // by default, will dispatch a duplicate `mousedown` event when this backend is activated\n    },\n    {\n      backend: TouchBackend,\n      // Note that you can call your backends with options\n      options: {enableMouseEvents: true},\n      transition: TouchTransition,\n      // will not dispatch a duplicate `touchstart` event when this backend is activated\n      skipDispatchOnTransition: true\n    }\n  ]\n};\n\nconst App: React.FC = () => {\n  return (\n    <DndProvider backend={MultiBackend} options={CustomHTML5toTouch}>\n      <Game/>\n    </DndProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { gameReducer } from \"reducers/gameReducer\";\nimport undoable, { excludeAction } from \"redux-undo\";\nimport { GameActionTypes } from \"actions/gameActions\";\nimport { scoreReducer } from \"reducers/scoreReducer\";\nimport { HistoryActionTypes } from \"actions/historyActions\";\nimport {cardsReducer} from \"./reducers/cardsReducer\";\n\nexport const rootReducer = combineReducers({\n  game: undoable(gameReducer, {\n    undoType: GameActionTypes.UndoMove,\n    ignoreInitialState: true,\n    clearHistoryType: HistoryActionTypes.ClearHistory,\n    filter: excludeAction([GameActionTypes.CardIsDragged, GameActionTypes.NewGame])\n  }),\n  cards: cardsReducer,\n  score: scoreReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"store\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}